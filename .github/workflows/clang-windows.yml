name: Clang
on:
  workflow_call:
    inputs:
      name: 
        required: true
        type: string
      platform_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      std_version:
        required: true
        type: string
      version:
        required: true
        type: string
      cmake_args:
        required: false
        type: string
        default: ""
      ctest_args:
        required: false
        type: string
        default: ""
      build_type:
        required: false
        type: string
        default: "Debug"
env:
  BUILD_TYPE: ${{inputs.build_type}}
jobs:
  build:
    name: ${{inputs.name}}
    runs-on: ${{inputs.image_name}}
    steps:
      - uses: actions/checkout@v3
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: C:/Program Files/LLVM
          key: llvm-${{inputs.version}}
      - name: Install LLVM & Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{inputs.version}}
          cached: ${{steps.cache-llvm.outputs.cache-hit}}
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Configure CMake (${{inputs.platform_name}})
        run: >-
          cmake -G Ninja -B ${{github.workspace}}/build-${{inputs.platform_name}}
          -DCMAKE_EXPORT_COMPILE_COMMANDS=1
          -DCMAKE_C_COMPILER:FILEPATH="C:/Program Files/LLVM/bin/clang.exe"
          -DCMAKE_CXX_COMPILER:FILEPATH="C:/Program Files/LLVM/bin/clang.exe"
          -DCMAKE_LINKER:FILEPATH="C:/Program Files/LLVM/bin/lld-link.exe"
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DGTEST_USE_OWN_TR1_TUPLE=1
          -DCMAKE_CXX_STANDARD=${{inputs.std_version}}
          ${{inputs.cmake_args}}
      - name: Build (${{inputs.platform_name}})
        run: >-
          cmake --build ${{github.workspace}}/build-${{inputs.platform_name}}
          --config ${{env.BUILD_TYPE}}
          --parallel ${{env.NUMBER_OF_PROCESSORS}}
      - name: Test (${{inputs.platform_name}})
        working-directory: ${{github.workspace}}/build-${{inputs.platform_name}}
        run: ctest -C ${{env.BUILD_TYPE}} ${{inputs.ctest_args}}
