name: Build & Test
on:
  workflow_call:
    inputs:
      platform_name:
        required: true
        type: string
      image_name:
        required: true
        type: string
      std_version:
        required: true
        type: string
      version:
        required: true
        type: string
env:
  BUILD_TYPE: Debug
jobs:
  build:
    runs-on: ${{inputs.image_name}}
    steps:
      - uses: actions/checkout@v3
      - name: Cache LLVM & Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: ./llvm
          key: llvm-${{inputs.version}}
      - name: Install LLVM & Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{inputs.version}}
          env: true
          cached: ${{steps.cache-llvm.outputs.cache-hit}}
      - name: Initialize Submodules
        run: git submodule update --init
      - name: Configure CMake (${{inputs.platform_name}})
        run: >-
          cmake -B ${{github.workspace}}/build-${{inputs.platform_name}}-clang-cpp${{inputs.std_version}}
          -DCMAKE_CXX_FLAGS=-stdlib=libc++
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
          -DGTEST_USE_OWN_TR1_TUPLE=1
          -DCMAKE_CXX_STANDARD=${{inputs.std_version}}
      - name: Build (${{inputs.platform_name}})
        run: >-
          cmake --build ${{github.workspace}}/build-${{inputs.platform_name}}-clang-cpp${{inputs.std_version}}
          --config ${{env.BUILD_TYPE}}
          --clean-first
      - name: Test (${{inputs.platform_name}})
        working-directory: ${{github.workspace}}/build-${{inputs.platform_name}}-clang-cpp${{inputs.std_version}}
        run: ctest -C ${{env.BUILD_TYPE}}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: body.md
          body: "# Snapshot Release"
          draft: false
          prerelease: false
          tag_name: ${{inputs.platform_name}}-clang-cpp${{inputs.std_version}}
          fail_on_unmatched_files: false
          files: |
            ${{github.workspace}}/build-${{inputs.platform_name}}-clang-cpp${{inputs.std_version}}/**/*.so
            ${{github.workspace}}/build-${{inputs.platform_name}}-clang-cpp${{inputs.std_version}}/**/*.a
            ${{github.workspace}}/include/**/*
